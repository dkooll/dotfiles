---
- name: enforce dotfile configuration
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    dotfiles_repo: "git@github.com:dkooll/dotfiles.git"
    dotfiles_local_path: "{{ lookup('env', 'HOME') }}/Documents/workspaces/dkooll/dotfiles"
  tasks:
    - name: Install homebrew packages
      ansible.builtin.homebrew:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      loop:
        - { name: starship, state: latest }
        - { name: neovim, state: present }
        - { name: node, state: present }
        - { name: npm, state: present }
        - { name: gnu-sed, state: present }
        - { name: gcc, state: present }
        - { name: cmake, state: present }
        - { name: ripgrep, state: present }
        - { name: fd, state: present }
        - { name: mingw-w64, state: present }
        - { name: zsh-autosuggestions, state: present }
        - { name: zoxide, state: present }
        - { name: tfenv, state: present }
        - { name: eza, state: present }
        - { name: dive, state: present }
        - { name: otree, state: present }
        - { name: rust, state: present }
        - { name: tmux, state: present }
        - { name: tokei, state: present }
        - { name: task, state: present }
        - { name: imagemagick, state: present }
        - { name: fzf, state: present }
        - { name: gh, state: present }
        - { name: az, state: present }
        - { name: lazygit, state: present }

      ignore_errors: yes

    - name: Install multiple Cargo packages
      ansible.builtin.command:
        cmd: cargo install {{ item }}
      loop:
        - serpl
        - repgrep

    - name: Install homebrew cask packages
      ansible.builtin.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop:
        - alacritty
        - ghostty
        - kitty

    - name: Install neovim node.js dependencies
      ansible.builtin.command:
        cmd: npm install -g neovim

    - name: Clone dotfiles repository
      ansible.builtin.git:
        repo: "{{ dotfiles_repo }}"
        dest: "{{ dotfiles_local_path }}"
        update: yes
        force: yes

    - name: Check if configuration directories exist
      ansible.builtin.stat:
        path: "{{ lookup('env', 'HOME') }}/.config/{{ item }}"
      register: config_dirs
      loop:
        - nvim
        - nvim-dev
        - ghostty

    - name: Create configuration directories if they do not exist
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.config/{{ item.item }}"
        state: directory
      when: not item.stat.exists
      loop: "{{ config_dirs.results }}"

    - name: Ensure .tmux/plugins directory exists
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.tmux/plugins"
        state: directory
        mode: '0755'

    - name: Clone TPM (Tmux Plugin Manager)
      ansible.builtin.git:
        repo: "https://github.com/tmux-plugins/tpm"
        dest: "{{ lookup('env', 'HOME') }}/.tmux/plugins/tpm"
        version: master
        update: yes

    - name: Symlink config files
      ansible.builtin.file:
        src: "{{ dotfiles_local_path }}/{{ item.src }}"
        dest: "{{ lookup('env', 'HOME') }}/{{ item.dest }}"
        state: link
        force: yes
      loop:
        - { src: 'starship/starship.toml', dest: '.config/starship.toml' }
        - { src: 'zsh/.zshrc', dest: '.zshrc' }
        - { src: 'tmux/.tmux.conf', dest: '.tmux.conf' }
        - { src: 'nvim', dest: '.config/nvim' }
        - { src: 'nvim-dev', dest: '.config/nvim-dev' }
        - { src: 'alacritty/.alacritty.toml', dest: '.alacritty.toml' }
        - { src: 'ghostty/config', dest: '.config/ghostty/config' }
