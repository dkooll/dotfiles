setw -g mode-keys vi
set -g history-limit 10000
set -g base-index 1
setw -g pane-base-index 1
set -g allow-rename on
set -g renumber-windows on

set -g default-terminal "${TERM}"
# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -g mouse on
set -g set-titles on
setw -g monitor-activity on
set -g bell-action any
set -g visual-bell off
set -g visual-activity off
set -g focus-events on
setw -g aggressive-resize on
set -g detach-on-destroy off
set -s escape-time 0

set -as terminal-features ",*:RGB"
set -ag terminal-overrides ",xterm-256color:RGB"

set-option -g status-left-length 30
set-option -g status-left "#[fg=#7DAEA3]#{session_name} #[default]"
set-option -g status-right " "
set-option -g status-style "bg=default"

set-option -g window-status-format "#[fg=#7DAEA3]#{window_index}:#{window_name}#{window_flags} #[default]"
set-option -g window-status-current-format "#[fg=#7DAEA3]#{window_index}:#{window_name}#{window_flags} #[default]"
set-option -g window-status-current-style "fg=#e1a345"
set-option -g window-status-last-style "fg=#936a2e"
set-option -g window-status-activity-style none

set -g status-justify left

set -g prefix C-a

# Send prefix to a nested tmux session by doubling the prefix
bind C-a send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# maximize / restore pane
bind z resize-pane -Z

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# resize panes using prefix + H, J, K, L
bind H resize-pane -L 5
bind L resize-pane -R 5
bind J resize-pane -D 5
bind K resize-pane -U 5

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 3) - 1)"

# Switch between two most recently used windows
bind Space last-window

# switch between two most recently used sessions
bind b switch-client -l

# break pane out of window
bind-key B break-pane -d

# put pane back into window
bind-key E command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# allow to copy to system clipboard
bind-key y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "copied tmux buffer to system clipboard"

# open lazygit in a new window with prefix+g
bind-key g new-window -n lazygit -c "#{pane_current_path}" "lazygit"

# open lazygit in a new window with prefix+g
# bind-key l new-window -n glow -c "#{pane_current_path}" "glow"

# open an application in a new window with prefix+o, and allow me to provide the app name
bind-key o command-prompt -p "open app: " "new-window '%%'"

# show a promp to kill a window by id with prefix+X
bind-key X command-prompt -p "kill window: " "kill-window -t '%%'"

# use prefix+| (or prefix+\) to split window horizontally and prefix+- or
# (prefix+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"

bind - split-window -v -c "#{pane_current_path}"

# change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# toggle status bar
bind-key -T prefix t set-option -g status

# Move tmux status bar to top
bind-key c-k run-shell "tmux set-option -g status-position top;"
# Move tmux status bar to bottom
bind-key C-j run-shell "tmux set-option -g status-position bottom;"

# Bind C-S-n to move to the next session
bind -n C-S-n switch-client -n
# Bind C-S-p to move to the previous session
bind -n C-S-p switch-client -p

# Set pane border colors to a very subtle grey
set -g pane-border-style fg=#1c1c1c,bg=default
set -g pane-active-border-style fg=#1c1c1c,bg=default

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'sainnhe/tmux-fzf'

# set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
run '~/.tmux/plugins/tpm/tpm'

#Set default shell and terminal options
set -g default-shell /bin/zsh
set -g default-command "exec zsh -l"
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",xterm*:Tc"

